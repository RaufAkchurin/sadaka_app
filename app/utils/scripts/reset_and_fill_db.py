import os
import shutil
import subprocess
from pathlib import Path

SCRIPT_DIR = Path(__file__).resolve().parent
PROJECT_ROOT = SCRIPT_DIR.parent.parent.parent  # sadaka_app/
DB_FILE = PROJECT_ROOT / "data" / "db.sqlite3"
MIGRATIONS_DIR = PROJECT_ROOT / "app" / "migration" / "versions"
DB_FILL_SCRIPT = PROJECT_ROOT / "app" / "utils" / "scripts" / "local_db_fill.py"


def remove_all_migrations():
    if MIGRATIONS_DIR.exists():
        shutil.rmtree(MIGRATIONS_DIR)
        MIGRATIONS_DIR.mkdir(parents=True, exist_ok=True)
        print(f"‚úÖ –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã: {MIGRATIONS_DIR}")
    else:
        print(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {MIGRATIONS_DIR}")


def remove_database():
    if DB_FILE.exists():
        try:
            subprocess.run(["rm", str(DB_FILE)], check=True)
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ rm: {DB_FILE}")
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±–∞–∑—ã —á–µ—Ä–µ–∑ rm: {e}")
    else:
        print(f"‚ö†Ô∏è –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω: {DB_FILE}")


def make_migration():
    subprocess.run("alembic revision --autogenerate -m 'Initial migration'", shell=True, check=True, cwd=PROJECT_ROOT)
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞.")


def apply_migration():
    subprocess.run("alembic upgrade head", shell=True, check=True, cwd=PROJECT_ROOT)
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã.")


def run_fill_script():
    subprocess.run(f"python {DB_FILL_SCRIPT}", shell=True, check=True, cwd=PROJECT_ROOT)
    print("‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ë–î –≤—ã–ø–æ–ª–Ω–µ–Ω.")


if __name__ == "__main__":
    os.chdir(PROJECT_ROOT)
    print(f"üìÅ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞: {PROJECT_ROOT}")
    remove_all_migrations()
    remove_database()
    make_migration()
    apply_migration()
    run_fill_script()
